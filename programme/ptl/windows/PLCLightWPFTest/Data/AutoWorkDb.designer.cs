#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace PLCLightWPFTest.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="AutoWork")]
	public partial class AutoWorkDbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertELabelOnForPartOnWorkstation(ELabelOnForPartOnWorkstation instance);
    partial void UpdateELabelOnForPartOnWorkstation(ELabelOnForPartOnWorkstation instance);
    partial void DeleteELabelOnForPartOnWorkstation(ELabelOnForPartOnWorkstation instance);
    #endregion
		
		public AutoWorkDbDataContext() : 
				base(global::PLCLightWPFTest.Properties.Settings.Default.AutoWorkConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public AutoWorkDbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AutoWorkDbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AutoWorkDbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AutoWorkDbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ELabelOnForPartOnWorkstation> ELabelOnForPartOnWorkstation
		{
			get
			{
				return this.GetTable<ELabelOnForPartOnWorkstation>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ELabelOnForPartOnWorkstation")]
	public partial class ELabelOnForPartOnWorkstation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _labelAddr;
		
		private string _partNr;
		
		private string _workstationId;
		
		private string _controlType;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnlabelAddrChanging(string value);
    partial void OnlabelAddrChanged();
    partial void OnpartNrChanging(string value);
    partial void OnpartNrChanged();
    partial void OnworkstationIdChanging(string value);
    partial void OnworkstationIdChanged();
    partial void OncontrolTypeChanging(string value);
    partial void OncontrolTypeChanged();
    #endregion
		
		public ELabelOnForPartOnWorkstation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_labelAddr", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string labelAddr
		{
			get
			{
				return this._labelAddr;
			}
			set
			{
				if ((this._labelAddr != value))
				{
					this.OnlabelAddrChanging(value);
					this.SendPropertyChanging();
					this._labelAddr = value;
					this.SendPropertyChanged("labelAddr");
					this.OnlabelAddrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_partNr", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string partNr
		{
			get
			{
				return this._partNr;
			}
			set
			{
				if ((this._partNr != value))
				{
					this.OnpartNrChanging(value);
					this.SendPropertyChanging();
					this._partNr = value;
					this.SendPropertyChanged("partNr");
					this.OnpartNrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_workstationId", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string workstationId
		{
			get
			{
				return this._workstationId;
			}
			set
			{
				if ((this._workstationId != value))
				{
					this.OnworkstationIdChanging(value);
					this.SendPropertyChanging();
					this._workstationId = value;
					this.SendPropertyChanged("workstationId");
					this.OnworkstationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_controlType", DbType="VarChar(50)")]
		public string controlType
		{
			get
			{
				return this._controlType;
			}
			set
			{
				if ((this._controlType != value))
				{
					this.OncontrolTypeChanging(value);
					this.SendPropertyChanging();
					this._controlType = value;
					this.SendPropertyChanged("controlType");
					this.OncontrolTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
