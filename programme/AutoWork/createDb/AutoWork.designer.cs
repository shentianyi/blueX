#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace createDb
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.Runtime.Serialization;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="AutoWork")]
	public partial class AutoWorkDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertELabelOnForPartOnWorkstation(ELabelOnForPartOnWorkstation instance);
    partial void UpdateELabelOnForPartOnWorkstation(ELabelOnForPartOnWorkstation instance);
    partial void DeleteELabelOnForPartOnWorkstation(ELabelOnForPartOnWorkstation instance);
    partial void InsertHistory(History instance);
    partial void UpdateHistory(History instance);
    partial void DeleteHistory(History instance);
    partial void InsertPart(Part instance);
    partial void UpdatePart(Part instance);
    partial void DeletePart(Part instance);
    partial void InsertRoutine(Routine instance);
    partial void UpdateRoutine(Routine instance);
    partial void DeleteRoutine(Routine instance);
    partial void InsertRoutineOnWorkInsruction(RoutineOnWorkInsruction instance);
    partial void UpdateRoutineOnWorkInsruction(RoutineOnWorkInsruction instance);
    partial void DeleteRoutineOnWorkInsruction(RoutineOnWorkInsruction instance);
    partial void InsertStaff(Staff instance);
    partial void UpdateStaff(Staff instance);
    partial void DeleteStaff(Staff instance);
    partial void InsertTraining(Training instance);
    partial void UpdateTraining(Training instance);
    partial void DeleteTraining(Training instance);
    partial void InsertWorkInstruction(WorkInstruction instance);
    partial void UpdateWorkInstruction(WorkInstruction instance);
    partial void DeleteWorkInstruction(WorkInstruction instance);
    partial void InsertWorkStation(WorkStation instance);
    partial void UpdateWorkStation(WorkStation instance);
    partial void DeleteWorkStation(WorkStation instance);
    partial void InsertOrder(Order instance);
    partial void UpdateOrder(Order instance);
    partial void DeleteOrder(Order instance);
    #endregion
		
		public AutoWorkDataContext() : 
				base(global::AutoWork.MySettings.Default.AutoWorkConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public AutoWorkDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AutoWorkDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AutoWorkDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AutoWorkDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ELabelOnForPartOnWorkstation> ELabelOnForPartOnWorkstation
		{
			get
			{
				return this.GetTable<ELabelOnForPartOnWorkstation>();
			}
		}
		
		public System.Data.Linq.Table<History> History
		{
			get
			{
				return this.GetTable<History>();
			}
		}
		
		public System.Data.Linq.Table<Part> Part
		{
			get
			{
				return this.GetTable<Part>();
			}
		}
		
		public System.Data.Linq.Table<PartOnRoutine> PartOnRoutine
		{
			get
			{
				return this.GetTable<PartOnRoutine>();
			}
		}
		
		public System.Data.Linq.Table<Routine> Routine
		{
			get
			{
				return this.GetTable<Routine>();
			}
		}
		
		public System.Data.Linq.Table<RoutineOnWorkInsruction> RoutineOnWorkInsruction
		{
			get
			{
				return this.GetTable<RoutineOnWorkInsruction>();
			}
		}
		
		public System.Data.Linq.Table<Staff> Staff
		{
			get
			{
				return this.GetTable<Staff>();
			}
		}
		
		public System.Data.Linq.Table<Training> Training
		{
			get
			{
				return this.GetTable<Training>();
			}
		}
		
		public System.Data.Linq.Table<WorkInstruction> WorkInstruction
		{
			get
			{
				return this.GetTable<WorkInstruction>();
			}
		}
		
		public System.Data.Linq.Table<RoutineOnWorkInstructionDetails> RoutineOnWorkInstructionDetails
		{
			get
			{
				return this.GetTable<RoutineOnWorkInstructionDetails>();
			}
		}
		
		public System.Data.Linq.Table<WorkStation> WorkStations
		{
			get
			{
				return this.GetTable<WorkStation>();
			}
		}
		
		public System.Data.Linq.Table<Order> Orders
		{
			get
			{
				return this.GetTable<Order>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ELabelOnForPartOnWorkstation")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ELabelOnForPartOnWorkstation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _labelAddr;
		
		private string _partNr;
		
		private string _workstationId;
		
		private EntityRef<Part> _Part;
		
		private EntityRef<WorkStation> _WorkStation;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnlabelAddrChanging(string value);
    partial void OnlabelAddrChanged();
    partial void OnpartNrChanging(string value);
    partial void OnpartNrChanged();
    partial void OnworkstationIdChanging(string value);
    partial void OnworkstationIdChanged();
    #endregion
		
		public ELabelOnForPartOnWorkstation()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_labelAddr", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string labelAddr
		{
			get
			{
				return this._labelAddr;
			}
			set
			{
				if ((this._labelAddr != value))
				{
					this.OnlabelAddrChanging(value);
					this.SendPropertyChanging();
					this._labelAddr = value;
					this.SendPropertyChanged("labelAddr");
					this.OnlabelAddrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_partNr", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string partNr
		{
			get
			{
				return this._partNr;
			}
			set
			{
				if ((this._partNr != value))
				{
					if (this._Part.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpartNrChanging(value);
					this.SendPropertyChanging();
					this._partNr = value;
					this.SendPropertyChanged("partNr");
					this.OnpartNrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_workstationId", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string workstationId
		{
			get
			{
				return this._workstationId;
			}
			set
			{
				if ((this._workstationId != value))
				{
					if (this._WorkStation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnworkstationIdChanging(value);
					this.SendPropertyChanging();
					this._workstationId = value;
					this.SendPropertyChanged("workstationId");
					this.OnworkstationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Part_ELabelOnForPartOnWorkstation", Storage="_Part", ThisKey="partNr", OtherKey="partnr", IsForeignKey=true)]
		public Part Part
		{
			get
			{
				return this._Part.Entity;
			}
			set
			{
				Part previousValue = this._Part.Entity;
				if (((previousValue != value) 
							|| (this._Part.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Part.Entity = null;
						previousValue.ELabelOnForPartOnWorkstation.Remove(this);
					}
					this._Part.Entity = value;
					if ((value != null))
					{
						value.ELabelOnForPartOnWorkstation.Add(this);
						this._partNr = value.partnr;
					}
					else
					{
						this._partNr = default(string);
					}
					this.SendPropertyChanged("Part");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkStation_ELabelOnForPartOnWorkstation", Storage="_WorkStation", ThisKey="workstationId", OtherKey="workstationId", IsForeignKey=true)]
		public WorkStation WorkStation
		{
			get
			{
				return this._WorkStation.Entity;
			}
			set
			{
				WorkStation previousValue = this._WorkStation.Entity;
				if (((previousValue != value) 
							|| (this._WorkStation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkStation.Entity = null;
						previousValue.ELabelOnForPartOnWorkstations.Remove(this);
					}
					this._WorkStation.Entity = value;
					if ((value != null))
					{
						value.ELabelOnForPartOnWorkstations.Add(this);
						this._workstationId = value.workstationId;
					}
					else
					{
						this._workstationId = default(string);
					}
					this.SendPropertyChanged("WorkStation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Part = default(EntityRef<Part>);
			this._WorkStation = default(EntityRef<WorkStation>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.History")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class History : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _staffId;
		
		private string _routineId;
		
		private string _workStationId;
		
		private string _orderId;
		
		private string _workInstructionId;
		
		private int _routineNormalTime;
		
		private int _actualTime;
		
		private int _qualityCode;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstaffIdChanging(string value);
    partial void OnstaffIdChanged();
    partial void OnroutineIdChanging(string value);
    partial void OnroutineIdChanged();
    partial void OnworkStationIdChanging(string value);
    partial void OnworkStationIdChanged();
    partial void OnorderIdChanging(string value);
    partial void OnorderIdChanged();
    partial void OnworkInstructionIdChanging(string value);
    partial void OnworkInstructionIdChanged();
    partial void OnroutineNormalTimeChanging(int value);
    partial void OnroutineNormalTimeChanged();
    partial void OnactualTimeChanging(int value);
    partial void OnactualTimeChanged();
    partial void OnqualityCodeChanging(int value);
    partial void OnqualityCodeChanged();
    #endregion
		
		public History()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staffId", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string staffId
		{
			get
			{
				return this._staffId;
			}
			set
			{
				if ((this._staffId != value))
				{
					this.OnstaffIdChanging(value);
					this.SendPropertyChanging();
					this._staffId = value;
					this.SendPropertyChanged("staffId");
					this.OnstaffIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_routineId", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string routineId
		{
			get
			{
				return this._routineId;
			}
			set
			{
				if ((this._routineId != value))
				{
					this.OnroutineIdChanging(value);
					this.SendPropertyChanging();
					this._routineId = value;
					this.SendPropertyChanged("routineId");
					this.OnroutineIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_workStationId", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string workStationId
		{
			get
			{
				return this._workStationId;
			}
			set
			{
				if ((this._workStationId != value))
				{
					this.OnworkStationIdChanging(value);
					this.SendPropertyChanging();
					this._workStationId = value;
					this.SendPropertyChanged("workStationId");
					this.OnworkStationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orderId", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string orderId
		{
			get
			{
				return this._orderId;
			}
			set
			{
				if ((this._orderId != value))
				{
					this.OnorderIdChanging(value);
					this.SendPropertyChanging();
					this._orderId = value;
					this.SendPropertyChanged("orderId");
					this.OnorderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_workInstructionId", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string workInstructionId
		{
			get
			{
				return this._workInstructionId;
			}
			set
			{
				if ((this._workInstructionId != value))
				{
					this.OnworkInstructionIdChanging(value);
					this.SendPropertyChanging();
					this._workInstructionId = value;
					this.SendPropertyChanged("workInstructionId");
					this.OnworkInstructionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_routineNormalTime", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public int routineNormalTime
		{
			get
			{
				return this._routineNormalTime;
			}
			set
			{
				if ((this._routineNormalTime != value))
				{
					this.OnroutineNormalTimeChanging(value);
					this.SendPropertyChanging();
					this._routineNormalTime = value;
					this.SendPropertyChanged("routineNormalTime");
					this.OnroutineNormalTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_actualTime", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public int actualTime
		{
			get
			{
				return this._actualTime;
			}
			set
			{
				if ((this._actualTime != value))
				{
					this.OnactualTimeChanging(value);
					this.SendPropertyChanging();
					this._actualTime = value;
					this.SendPropertyChanged("actualTime");
					this.OnactualTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_qualityCode", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public int qualityCode
		{
			get
			{
				return this._qualityCode;
			}
			set
			{
				if ((this._qualityCode != value))
				{
					this.OnqualityCodeChanging(value);
					this.SendPropertyChanging();
					this._qualityCode = value;
					this.SendPropertyChanged("qualityCode");
					this.OnqualityCodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Part")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Part : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _partnr;
		
		private string _partDesc;
		
		private string _supplierNr;
		
		private string _customerNr;
		
		private string _images;
		
		private EntitySet<ELabelOnForPartOnWorkstation> _ELabelOnForPartOnWorkstation;
		
		private bool serializing;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpartnrChanging(string value);
    partial void OnpartnrChanged();
    partial void OnpartDescChanging(string value);
    partial void OnpartDescChanged();
    partial void OnsupplierNrChanging(string value);
    partial void OnsupplierNrChanged();
    partial void OncustomerNrChanging(string value);
    partial void OncustomerNrChanged();
    partial void OnimagesChanging(string value);
    partial void OnimagesChanged();
    #endregion
		
		public Part()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_partnr", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string partnr
		{
			get
			{
				return this._partnr;
			}
			set
			{
				if ((this._partnr != value))
				{
					this.OnpartnrChanging(value);
					this.SendPropertyChanging();
					this._partnr = value;
					this.SendPropertyChanged("partnr");
					this.OnpartnrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_partDesc", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string partDesc
		{
			get
			{
				return this._partDesc;
			}
			set
			{
				if ((this._partDesc != value))
				{
					this.OnpartDescChanging(value);
					this.SendPropertyChanging();
					this._partDesc = value;
					this.SendPropertyChanged("partDesc");
					this.OnpartDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_supplierNr", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string supplierNr
		{
			get
			{
				return this._supplierNr;
			}
			set
			{
				if ((this._supplierNr != value))
				{
					this.OnsupplierNrChanging(value);
					this.SendPropertyChanging();
					this._supplierNr = value;
					this.SendPropertyChanged("supplierNr");
					this.OnsupplierNrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerNr", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string customerNr
		{
			get
			{
				return this._customerNr;
			}
			set
			{
				if ((this._customerNr != value))
				{
					this.OncustomerNrChanging(value);
					this.SendPropertyChanging();
					this._customerNr = value;
					this.SendPropertyChanged("customerNr");
					this.OncustomerNrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_images", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string images
		{
			get
			{
				return this._images;
			}
			set
			{
				if ((this._images != value))
				{
					this.OnimagesChanging(value);
					this.SendPropertyChanging();
					this._images = value;
					this.SendPropertyChanged("images");
					this.OnimagesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Part_ELabelOnForPartOnWorkstation", Storage="_ELabelOnForPartOnWorkstation", ThisKey="partnr", OtherKey="partNr")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<ELabelOnForPartOnWorkstation> ELabelOnForPartOnWorkstation
		{
			get
			{
				if ((this.serializing 
							&& (this._ELabelOnForPartOnWorkstation.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ELabelOnForPartOnWorkstation;
			}
			set
			{
				this._ELabelOnForPartOnWorkstation.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ELabelOnForPartOnWorkstation(ELabelOnForPartOnWorkstation entity)
		{
			this.SendPropertyChanging();
			entity.Part = this;
		}
		
		private void detach_ELabelOnForPartOnWorkstation(ELabelOnForPartOnWorkstation entity)
		{
			this.SendPropertyChanging();
			entity.Part = null;
		}
		
		private void Initialize()
		{
			this._ELabelOnForPartOnWorkstation = new EntitySet<ELabelOnForPartOnWorkstation>(new Action<ELabelOnForPartOnWorkstation>(this.attach_ELabelOnForPartOnWorkstation), new Action<ELabelOnForPartOnWorkstation>(this.detach_ELabelOnForPartOnWorkstation));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PartOnRoutine")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class PartOnRoutine
	{
		
		private int _id;
		
		private string _routineId;
		
		private string _partnr;
		
		public PartOnRoutine()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_routineId", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string routineId
		{
			get
			{
				return this._routineId;
			}
			set
			{
				if ((this._routineId != value))
				{
					this._routineId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_partnr", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string partnr
		{
			get
			{
				return this._partnr;
			}
			set
			{
				if ((this._partnr != value))
				{
					this._partnr = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Routine")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Routine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _routineId;
		
		private string _name;
		
		private string _description;
		
		private int _normalTime;
		
		private EntitySet<RoutineOnWorkInsruction> _RoutineOnWorkInsruction;
		
		private bool serializing;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnroutineIdChanging(string value);
    partial void OnroutineIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnnormalTimeChanging(int value);
    partial void OnnormalTimeChanged();
    #endregion
		
		public Routine()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_routineId", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string routineId
		{
			get
			{
				return this._routineId;
			}
			set
			{
				if ((this._routineId != value))
				{
					this.OnroutineIdChanging(value);
					this.SendPropertyChanging();
					this._routineId = value;
					this.SendPropertyChanged("routineId");
					this.OnroutineIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_normalTime", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int normalTime
		{
			get
			{
				return this._normalTime;
			}
			set
			{
				if ((this._normalTime != value))
				{
					this.OnnormalTimeChanging(value);
					this.SendPropertyChanging();
					this._normalTime = value;
					this.SendPropertyChanged("normalTime");
					this.OnnormalTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Routine_RoutineOnWorkInsruction", Storage="_RoutineOnWorkInsruction", ThisKey="routineId", OtherKey="routineId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public EntitySet<RoutineOnWorkInsruction> RoutineOnWorkInsruction
		{
			get
			{
				if ((this.serializing 
							&& (this._RoutineOnWorkInsruction.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._RoutineOnWorkInsruction;
			}
			set
			{
				this._RoutineOnWorkInsruction.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RoutineOnWorkInsruction(RoutineOnWorkInsruction entity)
		{
			this.SendPropertyChanging();
			entity.Routine = this;
		}
		
		private void detach_RoutineOnWorkInsruction(RoutineOnWorkInsruction entity)
		{
			this.SendPropertyChanging();
			entity.Routine = null;
		}
		
		private void Initialize()
		{
			this._RoutineOnWorkInsruction = new EntitySet<RoutineOnWorkInsruction>(new Action<RoutineOnWorkInsruction>(this.attach_RoutineOnWorkInsruction), new Action<RoutineOnWorkInsruction>(this.detach_RoutineOnWorkInsruction));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RoutineOnWorkInsruction")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class RoutineOnWorkInsruction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _workInstructionId;
		
		private string _routineId;
		
		private string _video;
		
		private int _sequence;
		
		private string _picture;
		
		private EntityRef<Routine> _Routine;
		
		private EntityRef<WorkInstruction> _WorkInstruction;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnworkInstructionIdChanging(string value);
    partial void OnworkInstructionIdChanged();
    partial void OnroutineIdChanging(string value);
    partial void OnroutineIdChanged();
    partial void OnvideoChanging(string value);
    partial void OnvideoChanged();
    partial void OnsequenceChanging(int value);
    partial void OnsequenceChanged();
    partial void OnpictureChanging(string value);
    partial void OnpictureChanged();
    #endregion
		
		public RoutineOnWorkInsruction()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_workInstructionId", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string workInstructionId
		{
			get
			{
				return this._workInstructionId;
			}
			set
			{
				if ((this._workInstructionId != value))
				{
					if (this._WorkInstruction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnworkInstructionIdChanging(value);
					this.SendPropertyChanging();
					this._workInstructionId = value;
					this.SendPropertyChanged("workInstructionId");
					this.OnworkInstructionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_routineId", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string routineId
		{
			get
			{
				return this._routineId;
			}
			set
			{
				if ((this._routineId != value))
				{
					if (this._Routine.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnroutineIdChanging(value);
					this.SendPropertyChanging();
					this._routineId = value;
					this.SendPropertyChanged("routineId");
					this.OnroutineIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_video", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string video
		{
			get
			{
				return this._video;
			}
			set
			{
				if ((this._video != value))
				{
					this.OnvideoChanging(value);
					this.SendPropertyChanging();
					this._video = value;
					this.SendPropertyChanged("video");
					this.OnvideoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sequence", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int sequence
		{
			get
			{
				return this._sequence;
			}
			set
			{
				if ((this._sequence != value))
				{
					this.OnsequenceChanging(value);
					this.SendPropertyChanging();
					this._sequence = value;
					this.SendPropertyChanged("sequence");
					this.OnsequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_picture", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string picture
		{
			get
			{
				return this._picture;
			}
			set
			{
				if ((this._picture != value))
				{
					this.OnpictureChanging(value);
					this.SendPropertyChanging();
					this._picture = value;
					this.SendPropertyChanged("picture");
					this.OnpictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Routine_RoutineOnWorkInsruction", Storage="_Routine", ThisKey="routineId", OtherKey="routineId", IsForeignKey=true)]
		public Routine Routine
		{
			get
			{
				return this._Routine.Entity;
			}
			set
			{
				Routine previousValue = this._Routine.Entity;
				if (((previousValue != value) 
							|| (this._Routine.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Routine.Entity = null;
						previousValue.RoutineOnWorkInsruction.Remove(this);
					}
					this._Routine.Entity = value;
					if ((value != null))
					{
						value.RoutineOnWorkInsruction.Add(this);
						this._routineId = value.routineId;
					}
					else
					{
						this._routineId = default(string);
					}
					this.SendPropertyChanged("Routine");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkInstruction_RoutineOnWorkInsruction", Storage="_WorkInstruction", ThisKey="workInstructionId", OtherKey="id", IsForeignKey=true)]
		public WorkInstruction WorkInstruction
		{
			get
			{
				return this._WorkInstruction.Entity;
			}
			set
			{
				WorkInstruction previousValue = this._WorkInstruction.Entity;
				if (((previousValue != value) 
							|| (this._WorkInstruction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkInstruction.Entity = null;
						previousValue.RoutineOnWorkInsruction.Remove(this);
					}
					this._WorkInstruction.Entity = value;
					if ((value != null))
					{
						value.RoutineOnWorkInsruction.Add(this);
						this._workInstructionId = value.id;
					}
					else
					{
						this._workInstructionId = default(string);
					}
					this.SendPropertyChanged("WorkInstruction");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Routine = default(EntityRef<Routine>);
			this._WorkInstruction = default(EntityRef<WorkInstruction>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Staff")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Staff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _name;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public Staff()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Training")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Training : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _staffId;
		
		private string _routineId;
		
		private string _workinstructionId;
		
		private int _normalHour;
		
		private int _actualHour;
		
		private int _score;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstaffIdChanging(string value);
    partial void OnstaffIdChanged();
    partial void OnroutineIdChanging(string value);
    partial void OnroutineIdChanged();
    partial void OnworkinstructionIdChanging(string value);
    partial void OnworkinstructionIdChanged();
    partial void OnnormalHourChanging(int value);
    partial void OnnormalHourChanged();
    partial void OnactualHourChanging(int value);
    partial void OnactualHourChanged();
    partial void OnscoreChanging(int value);
    partial void OnscoreChanged();
    #endregion
		
		public Training()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staffId", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string staffId
		{
			get
			{
				return this._staffId;
			}
			set
			{
				if ((this._staffId != value))
				{
					this.OnstaffIdChanging(value);
					this.SendPropertyChanging();
					this._staffId = value;
					this.SendPropertyChanged("staffId");
					this.OnstaffIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_routineId", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string routineId
		{
			get
			{
				return this._routineId;
			}
			set
			{
				if ((this._routineId != value))
				{
					this.OnroutineIdChanging(value);
					this.SendPropertyChanging();
					this._routineId = value;
					this.SendPropertyChanged("routineId");
					this.OnroutineIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_workinstructionId", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string workinstructionId
		{
			get
			{
				return this._workinstructionId;
			}
			set
			{
				if ((this._workinstructionId != value))
				{
					this.OnworkinstructionIdChanging(value);
					this.SendPropertyChanging();
					this._workinstructionId = value;
					this.SendPropertyChanged("workinstructionId");
					this.OnworkinstructionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_normalHour", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int normalHour
		{
			get
			{
				return this._normalHour;
			}
			set
			{
				if ((this._normalHour != value))
				{
					this.OnnormalHourChanging(value);
					this.SendPropertyChanging();
					this._normalHour = value;
					this.SendPropertyChanged("normalHour");
					this.OnnormalHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_actualHour", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public int actualHour
		{
			get
			{
				return this._actualHour;
			}
			set
			{
				if ((this._actualHour != value))
				{
					this.OnactualHourChanging(value);
					this.SendPropertyChanging();
					this._actualHour = value;
					this.SendPropertyChanged("actualHour");
					this.OnactualHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_score", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public int score
		{
			get
			{
				return this._score;
			}
			set
			{
				if ((this._score != value))
				{
					this.OnscoreChanging(value);
					this.SendPropertyChanging();
					this._score = value;
					this.SendPropertyChanged("score");
					this.OnscoreChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkInstruction")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class WorkInstruction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _name;
		
		private EntitySet<RoutineOnWorkInsruction> _RoutineOnWorkInsruction;
		
		private bool serializing;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public WorkInstruction()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkInstruction_RoutineOnWorkInsruction", Storage="_RoutineOnWorkInsruction", ThisKey="id", OtherKey="workInstructionId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3, EmitDefaultValue=false)]
		public EntitySet<RoutineOnWorkInsruction> RoutineOnWorkInsruction
		{
			get
			{
				if ((this.serializing 
							&& (this._RoutineOnWorkInsruction.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._RoutineOnWorkInsruction;
			}
			set
			{
				this._RoutineOnWorkInsruction.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RoutineOnWorkInsruction(RoutineOnWorkInsruction entity)
		{
			this.SendPropertyChanging();
			entity.WorkInstruction = this;
		}
		
		private void detach_RoutineOnWorkInsruction(RoutineOnWorkInsruction entity)
		{
			this.SendPropertyChanging();
			entity.WorkInstruction = null;
		}
		
		private void Initialize()
		{
			this._RoutineOnWorkInsruction = new EntitySet<RoutineOnWorkInsruction>(new Action<RoutineOnWorkInsruction>(this.attach_RoutineOnWorkInsruction), new Action<RoutineOnWorkInsruction>(this.detach_RoutineOnWorkInsruction));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RoutineOnWorkInstructionDetails")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class RoutineOnWorkInstructionDetails
	{
		
		private string _routineId;
		
		private string _routineName;
		
		private string _routineDescription;
		
		private int _normalTime;
		
		private string _video;
		
		private int _sequence;
		
		private string _picture;
		
		private string _workInstructionId;
		
		private string _workInstructionName;
		
		public RoutineOnWorkInstructionDetails()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_routineId", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string routineId
		{
			get
			{
				return this._routineId;
			}
			set
			{
				if ((this._routineId != value))
				{
					this._routineId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_routineName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string routineName
		{
			get
			{
				return this._routineName;
			}
			set
			{
				if ((this._routineName != value))
				{
					this._routineName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_routineDescription", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string routineDescription
		{
			get
			{
				return this._routineDescription;
			}
			set
			{
				if ((this._routineDescription != value))
				{
					this._routineDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_normalTime", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int normalTime
		{
			get
			{
				return this._normalTime;
			}
			set
			{
				if ((this._normalTime != value))
				{
					this._normalTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_video", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string video
		{
			get
			{
				return this._video;
			}
			set
			{
				if ((this._video != value))
				{
					this._video = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sequence", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public int sequence
		{
			get
			{
				return this._sequence;
			}
			set
			{
				if ((this._sequence != value))
				{
					this._sequence = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_picture", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string picture
		{
			get
			{
				return this._picture;
			}
			set
			{
				if ((this._picture != value))
				{
					this._picture = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_workInstructionId", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string workInstructionId
		{
			get
			{
				return this._workInstructionId;
			}
			set
			{
				if ((this._workInstructionId != value))
				{
					this._workInstructionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_workInstructionName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string workInstructionName
		{
			get
			{
				return this._workInstructionName;
			}
			set
			{
				if ((this._workInstructionName != value))
				{
					this._workInstructionName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkStation")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class WorkStation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _workstationId;
		
		private string _name;
		
		private string _prodLine;
		
		private string _projectNr;
		
		private string _currentStaff;
		
		private System.Nullable<bool> _isLast;
		
		private System.Nullable<int> _seq;
		
		private EntitySet<ELabelOnForPartOnWorkstation> _ELabelOnForPartOnWorkstations;
		
		private EntitySet<Order> _Orders;
		
		private bool serializing;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnworkstationIdChanging(string value);
    partial void OnworkstationIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnprodLineChanging(string value);
    partial void OnprodLineChanged();
    partial void OnprojectNrChanging(string value);
    partial void OnprojectNrChanged();
    partial void OncurrentStaffChanging(string value);
    partial void OncurrentStaffChanged();
    partial void OnisLastChanging(System.Nullable<bool> value);
    partial void OnisLastChanged();
    partial void OnseqChanging(System.Nullable<int> value);
    partial void OnseqChanged();
    #endregion
		
		public WorkStation()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_workstationId", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string workstationId
		{
			get
			{
				return this._workstationId;
			}
			set
			{
				if ((this._workstationId != value))
				{
					this.OnworkstationIdChanging(value);
					this.SendPropertyChanging();
					this._workstationId = value;
					this.SendPropertyChanged("workstationId");
					this.OnworkstationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prodLine", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string prodLine
		{
			get
			{
				return this._prodLine;
			}
			set
			{
				if ((this._prodLine != value))
				{
					this.OnprodLineChanging(value);
					this.SendPropertyChanging();
					this._prodLine = value;
					this.SendPropertyChanged("prodLine");
					this.OnprodLineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_projectNr", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string projectNr
		{
			get
			{
				return this._projectNr;
			}
			set
			{
				if ((this._projectNr != value))
				{
					this.OnprojectNrChanging(value);
					this.SendPropertyChanging();
					this._projectNr = value;
					this.SendPropertyChanged("projectNr");
					this.OnprojectNrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_currentStaff", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string currentStaff
		{
			get
			{
				return this._currentStaff;
			}
			set
			{
				if ((this._currentStaff != value))
				{
					this.OncurrentStaffChanging(value);
					this.SendPropertyChanging();
					this._currentStaff = value;
					this.SendPropertyChanged("currentStaff");
					this.OncurrentStaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isLast", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<bool> isLast
		{
			get
			{
				return this._isLast;
			}
			set
			{
				if ((this._isLast != value))
				{
					this.OnisLastChanging(value);
					this.SendPropertyChanging();
					this._isLast = value;
					this.SendPropertyChanged("isLast");
					this.OnisLastChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seq", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<int> seq
		{
			get
			{
				return this._seq;
			}
			set
			{
				if ((this._seq != value))
				{
					this.OnseqChanging(value);
					this.SendPropertyChanging();
					this._seq = value;
					this.SendPropertyChanged("seq");
					this.OnseqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkStation_ELabelOnForPartOnWorkstation", Storage="_ELabelOnForPartOnWorkstations", ThisKey="workstationId", OtherKey="workstationId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public EntitySet<ELabelOnForPartOnWorkstation> ELabelOnForPartOnWorkstations
		{
			get
			{
				if ((this.serializing 
							&& (this._ELabelOnForPartOnWorkstations.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ELabelOnForPartOnWorkstations;
			}
			set
			{
				this._ELabelOnForPartOnWorkstations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkStation_Order", Storage="_Orders", ThisKey="workstationId", OtherKey="workstationId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9, EmitDefaultValue=false)]
		public EntitySet<Order> Orders
		{
			get
			{
				if ((this.serializing 
							&& (this._Orders.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ELabelOnForPartOnWorkstations(ELabelOnForPartOnWorkstation entity)
		{
			this.SendPropertyChanging();
			entity.WorkStation = this;
		}
		
		private void detach_ELabelOnForPartOnWorkstations(ELabelOnForPartOnWorkstation entity)
		{
			this.SendPropertyChanging();
			entity.WorkStation = null;
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.WorkStation = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.WorkStation = null;
		}
		
		private void Initialize()
		{
			this._ELabelOnForPartOnWorkstations = new EntitySet<ELabelOnForPartOnWorkstation>(new Action<ELabelOnForPartOnWorkstation>(this.attach_ELabelOnForPartOnWorkstations), new Action<ELabelOnForPartOnWorkstation>(this.detach_ELabelOnForPartOnWorkstations));
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Order]")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _orderId;
		
		private string _workstationId;
		
		private System.Nullable<int> _status;
		
		private EntityRef<WorkStation> _WorkStation;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnorderIdChanging(string value);
    partial void OnorderIdChanged();
    partial void OnworkstationIdChanging(string value);
    partial void OnworkstationIdChanged();
    partial void OnstatusChanging(System.Nullable<int> value);
    partial void OnstatusChanged();
    #endregion
		
		public Order()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orderId", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string orderId
		{
			get
			{
				return this._orderId;
			}
			set
			{
				if ((this._orderId != value))
				{
					this.OnorderIdChanging(value);
					this.SendPropertyChanging();
					this._orderId = value;
					this.SendPropertyChanged("orderId");
					this.OnorderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_workstationId", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string workstationId
		{
			get
			{
				return this._workstationId;
			}
			set
			{
				if ((this._workstationId != value))
				{
					if (this._WorkStation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnworkstationIdChanging(value);
					this.SendPropertyChanging();
					this._workstationId = value;
					this.SendPropertyChanged("workstationId");
					this.OnworkstationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkStation_Order", Storage="_WorkStation", ThisKey="workstationId", OtherKey="workstationId", IsForeignKey=true)]
		public WorkStation WorkStation
		{
			get
			{
				return this._WorkStation.Entity;
			}
			set
			{
				WorkStation previousValue = this._WorkStation.Entity;
				if (((previousValue != value) 
							|| (this._WorkStation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkStation.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._WorkStation.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._workstationId = value.workstationId;
					}
					else
					{
						this._workstationId = default(string);
					}
					this.SendPropertyChanged("WorkStation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._WorkStation = default(EntityRef<WorkStation>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
}
#pragma warning restore 1591
